server.port=8081
#server.port=80
spring.application.name=carweb-reptile-yqy-02

spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://121.36.28.52:3306/matching_network_db?useUnicode=true&characterEncoding=utf-8&useSSL=true&serverTimezone=UTC
#spring.datasource.url=jdbc:mysql://localhost:3306/matching_network_db?useUnicode=true&characterEncoding=utf-8&useSSL=true
spring.datasource.username=root
spring.datasource.password=yqy87523089!
#spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


#连接池配置
#初始化大小
spring.datasource.initialSize=5
#最小连接数
spring.datasource.minIdle=5
#最大连接数
spring.datasource.maxActive=20
#连接等待超时时间
spring.datasource.maxWait=60000
#配置隔多久进行一次检测(检测可以关闭的空闲连接)，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
#配置连接在池中的最小生存时间
spring.datasource.minEvictableIdleTimeMillis=300000
#校验sql、oracle配置，如果不配置validationQuery，则下面三项无效
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
#合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true

mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.reptile.carwebreptileyqy

#控制台输出sql
logging.level.com.reptile.carwebreptileyqy.mapper=debug

# solr配置
spring.data.solr.host=http://localhost:8088/solr/core_demo
